; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\flash_if.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\flash_if.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\flash_if.crf ..\..\User\flash_if.c]
                          THUMB

                          AREA ||i.FLASH_Check_CRC||, CODE, READONLY, ALIGN=2

                  FLASH_Check_CRC PROC
;;;63     */
;;;64     uint8_t FLASH_Check_CRC(Blank_Mark flash_blank)
000000  b510              PUSH     {r4,lr}
;;;65     { 
000002  4604              MOV      r4,r0
;;;66     	CRC_ResetDR();	//复位CRC数据寄存器
000004  f7fffffe          BL       CRC_ResetDR
;;;67     	if(flash_blank == App_Blank)
000008  2c02              CMP      r4,#2
00000a  d10b              BNE      |L1.36|
;;;68     	{
;;;69     		if(CRC_CalcBlockCRC((uint32_t *)APPLICATION_ADDRESS, APPLICATION_LENGTH - 1) == *(__IO uint32_t*) (APPLICATION_END_ADDRESS -3))//校验程序区域CRC
00000c  490e              LDR      r1,|L1.72|
00000e  480f              LDR      r0,|L1.76|
000010  f7fffffe          BL       CRC_CalcBlockCRC
000014  490e              LDR      r1,|L1.80|
000016  6809              LDR      r1,[r1,#0]
000018  4288              CMP      r0,r1
00001a  d101              BNE      |L1.32|
;;;70     		{
;;;71     			return 1;
00001c  2001              MOVS     r0,#1
                  |L1.30|
;;;72     		}
;;;73     		else
;;;74     		{
;;;75     			return 0;
;;;76     		}
;;;77     	}
;;;78     	else if(flash_blank == BackUp_App_Blank)
;;;79     	{
;;;80     		if(CRC_CalcBlockCRC((uint32_t *)APPLICATION_BACKUP_ADDRESS, APPLICATION_BACKUP_LENGTH - 1) == *(__IO uint32_t*) (APPLICATION_BACKUP_END_ADDRESS -3))//校验备份程序区域CRC
;;;81     		{
;;;82     			return 1;
;;;83     		}
;;;84     		else
;;;85     		{
;;;86     			return 0;
;;;87     		}
;;;88     	}
;;;89     	return 0;
;;;90     }
00001e  bd10              POP      {r4,pc}
                  |L1.32|
000020  2000              MOVS     r0,#0                 ;75
000022  e7fc              B        |L1.30|
                  |L1.36|
000024  2c03              CMP      r4,#3                 ;78
000026  d10c              BNE      |L1.66|
000028  4907              LDR      r1,|L1.72|
00002a  4809              LDR      r0,|L1.80|
00002c  1d00              ADDS     r0,r0,#4              ;80
00002e  f7fffffe          BL       CRC_CalcBlockCRC
000032  4908              LDR      r1,|L1.84|
000034  6809              LDR      r1,[r1,#0]            ;80
000036  4288              CMP      r0,r1                 ;80
000038  d101              BNE      |L1.62|
00003a  2001              MOVS     r0,#1                 ;82
00003c  e7ef              B        |L1.30|
                  |L1.62|
00003e  2000              MOVS     r0,#0                 ;86
000040  e7ed              B        |L1.30|
                  |L1.66|
000042  2000              MOVS     r0,#0                 ;89
000044  e7eb              B        |L1.30|
;;;91     
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
                          DCD      0x00017fff
                  |L1.76|
                          DCD      0x08040000
                  |L1.80|
                          DCD      0x0809fffc
                  |L1.84|
                          DCD      0x080ffffc

                          AREA ||i.FLASH_If_ConfigWriteProtection||, CODE, READONLY, ALIGN=1

                  FLASH_If_ConfigWriteProtection PROC
;;;188    */
;;;189    uint8_t FLASH_If_ConfigWriteProtection(Blank_Mark flash_blank, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;190    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;191    	if(flash_blank == BootLoader_Blank)
000006  2c01              CMP      r4,#1
000008  d109              BNE      |L2.30|
;;;192    	{
;;;193    		FLASH_OB_WRPConfig(OB_WRP_Sector_4, NewState);
00000a  4629              MOV      r1,r5
00000c  2010              MOVS     r0,#0x10
00000e  f7fffffe          BL       FLASH_OB_WRPConfig
;;;194    		/* 进行 Option Bytes 编程. */  
;;;195    		if (FLASH_OB_Launch() != FLASH_COMPLETE)
000012  f7fffffe          BL       FLASH_OB_Launch
000016  2809              CMP      r0,#9
000018  d01b              BEQ      |L2.82|
;;;196    		{
;;;197    			/* 解保护失败 */
;;;198    			return 1;
00001a  2001              MOVS     r0,#1
                  |L2.28|
;;;199    		}
;;;200    	}
;;;201    	else if(flash_blank == App_Blank)
;;;202    	{
;;;203    		FLASH_OB_WRPConfig(OB_WRP_Sector_6 | OB_WRP_Sector_7 | OB_WRP_Sector_8, NewState);
;;;204    		/* 进行 Option Bytes 编程. */  
;;;205    		if (FLASH_OB_Launch() != FLASH_COMPLETE)
;;;206    		{
;;;207    			/* 解保护失败 */
;;;208    			return 1;
;;;209    		}
;;;210    	}
;;;211    	else if(flash_blank == BackUp_App_Blank)
;;;212    	{		
;;;213    		FLASH_OB_WRPConfig(OB_WRP_Sector_9 | OB_WRP_Sector_10 | OB_WRP_Sector_11, NewState);
;;;214    		/* 进行 Option Bytes 编程. */  
;;;215    		if (FLASH_OB_Launch() != FLASH_COMPLETE)
;;;216    		{
;;;217    			/* 解保护失败 */
;;;218    			return 1;
;;;219    		}
;;;220    	}
;;;221    	return 0;
;;;222    }
00001c  bd70              POP      {r4-r6,pc}
                  |L2.30|
00001e  2c02              CMP      r4,#2                 ;201
000020  d10a              BNE      |L2.56|
000022  4629              MOV      r1,r5                 ;203
000024  f44f70e0          MOV      r0,#0x1c0             ;203
000028  f7fffffe          BL       FLASH_OB_WRPConfig
00002c  f7fffffe          BL       FLASH_OB_Launch
000030  2809              CMP      r0,#9                 ;205
000032  d00e              BEQ      |L2.82|
000034  2001              MOVS     r0,#1                 ;208
000036  e7f1              B        |L2.28|
                  |L2.56|
000038  2c03              CMP      r4,#3                 ;211
00003a  d10a              BNE      |L2.82|
00003c  4629              MOV      r1,r5                 ;213
00003e  f44f6060          MOV      r0,#0xe00             ;213
000042  f7fffffe          BL       FLASH_OB_WRPConfig
000046  f7fffffe          BL       FLASH_OB_Launch
00004a  2809              CMP      r0,#9                 ;215
00004c  d001              BEQ      |L2.82|
00004e  2001              MOVS     r0,#1                 ;218
000050  e7e4              B        |L2.28|
                  |L2.82|
000052  2000              MOVS     r0,#0                 ;221
000054  e7e2              B        |L2.28|
;;;223    
                          ENDP


                          AREA ||i.FLASH_If_Erase||, CODE, READONLY, ALIGN=2

                  FLASH_If_Erase PROC
;;;102    */
;;;103    uint8_t FLASH_If_Erase(Blank_Mark flash_blank)
000000  b570              PUSH     {r4-r6,lr}
;;;104    {
000002  4605              MOV      r5,r0
;;;105    	uint32_t UserStartSector = 0, i = 0;
000004  2600              MOVS     r6,#0
000006  2400              MOVS     r4,#0
;;;106    	if(flash_blank == BootLoader_Blank)
000008  2d01              CMP      r5,#1
00000a  d10b              BNE      |L3.36|
;;;107    	{
;;;108    		UserStartSector = GetSector(BOOTLOADER_FLAG_ADDRESS);
00000c  481a              LDR      r0,|L3.120|
00000e  f7fffffe          BL       GetSector
000012  4606              MOV      r6,r0
;;;109    		if (FLASH_EraseSector(UserStartSector, VoltageRange_3) != FLASH_COMPLETE)
000014  2102              MOVS     r1,#2
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       FLASH_EraseSector
00001c  2809              CMP      r0,#9
00001e  d028              BEQ      |L3.114|
;;;110    		{
;;;111    			return 1;
000020  2001              MOVS     r0,#1
                  |L3.34|
;;;112    		}
;;;113    	}
;;;114    	else if(flash_blank == App_Blank)
;;;115    	{		
;;;116    		UserStartSector = GetSector(APPLICATION_ADDRESS);
;;;117    		for(i = UserStartSector; i <= FLASH_Sector_8; i += 8)
;;;118    		{
;;;119    			if (FLASH_EraseSector(i, VoltageRange_3) != FLASH_COMPLETE)
;;;120    			{
;;;121    				return 1;
;;;122    			}
;;;123    		}
;;;124    	}
;;;125    	else if(flash_blank == BackUp_App_Blank)
;;;126    	{		
;;;127    		UserStartSector = GetSector(APPLICATION_BACKUP_ADDRESS);
;;;128    		for(i = UserStartSector; i <= FLASH_Sector_11; i += 8)
;;;129    		{
;;;130    			if (FLASH_EraseSector(i, VoltageRange_3) != FLASH_COMPLETE)
;;;131    			{
;;;132    				return 1;
;;;133    			}
;;;134    		}
;;;135    	}
;;;136    	return 0;
;;;137    }
000022  bd70              POP      {r4-r6,pc}
                  |L3.36|
000024  2d02              CMP      r5,#2                 ;114
000026  d111              BNE      |L3.76|
000028  4814              LDR      r0,|L3.124|
00002a  f7fffffe          BL       GetSector
00002e  4606              MOV      r6,r0                 ;116
000030  4634              MOV      r4,r6                 ;117
000032  e008              B        |L3.70|
                  |L3.52|
000034  2102              MOVS     r1,#2                 ;119
000036  4620              MOV      r0,r4                 ;119
000038  f7fffffe          BL       FLASH_EraseSector
00003c  2809              CMP      r0,#9                 ;119
00003e  d001              BEQ      |L3.68|
000040  2001              MOVS     r0,#1                 ;121
000042  e7ee              B        |L3.34|
                  |L3.68|
000044  3408              ADDS     r4,r4,#8              ;117
                  |L3.70|
000046  2c40              CMP      r4,#0x40              ;117
000048  d9f4              BLS      |L3.52|
00004a  e012              B        |L3.114|
                  |L3.76|
00004c  2d03              CMP      r5,#3                 ;125
00004e  d110              BNE      |L3.114|
000050  480b              LDR      r0,|L3.128|
000052  f7fffffe          BL       GetSector
000056  4606              MOV      r6,r0                 ;127
000058  4634              MOV      r4,r6                 ;128
00005a  e008              B        |L3.110|
                  |L3.92|
00005c  2102              MOVS     r1,#2                 ;130
00005e  4620              MOV      r0,r4                 ;130
000060  f7fffffe          BL       FLASH_EraseSector
000064  2809              CMP      r0,#9                 ;130
000066  d001              BEQ      |L3.108|
000068  2001              MOVS     r0,#1                 ;132
00006a  e7da              B        |L3.34|
                  |L3.108|
00006c  3408              ADDS     r4,r4,#8              ;128
                  |L3.110|
00006e  2c58              CMP      r4,#0x58              ;128
000070  d9f4              BLS      |L3.92|
                  |L3.114|
000072  2000              MOVS     r0,#0                 ;136
000074  e7d5              B        |L3.34|
;;;138    
                          ENDP

000076  0000              DCW      0x0000
                  |L3.120|
                          DCD      0x08010000
                  |L3.124|
                          DCD      0x08040000
                  |L3.128|
                          DCD      0x080a0000

                          AREA ||i.FLASH_If_Init||, CODE, READONLY, ALIGN=1

                  FLASH_If_Init PROC
;;;25     */
;;;26     void FLASH_If_Init(void)
000000  b510              PUSH     {r4,lr}
;;;27     { 
;;;28     	/* Clear pending flags (if any) */  
;;;29     	FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | 
000002  20f3              MOVS     r0,#0xf3
000004  f7fffffe          BL       FLASH_ClearFlag
;;;30     				  FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR|FLASH_FLAG_PGSERR);
;;;31     }
000008  bd10              POP      {r4,pc}
;;;32     
                          ENDP


                          AREA ||i.FLASH_If_New_App||, CODE, READONLY, ALIGN=2

                  FLASH_If_New_App PROC
;;;41     */
;;;42     uint8_t FLASH_If_New_App(void)
000000  b510              PUSH     {r4,lr}
;;;43     { 
;;;44     	if(memcmp(RANDOM_BOOTLOADER_NEW, (uc8 *)BOOTLOADER_FLAG_ADDRESS, 16)==0)//与事先保存的随机序列进行比较
000002  2210              MOVS     r2,#0x10
000004  4904              LDR      r1,|L5.24|
000006  4805              LDR      r0,|L5.28|
000008  f7fffffe          BL       memcmp
00000c  b908              CBNZ     r0,|L5.18|
;;;45     	{
;;;46     		return 1;
00000e  2001              MOVS     r0,#1
                  |L5.16|
;;;47     	}
;;;48     	else
;;;49     	{
;;;50     		return 0;
;;;51     	}
;;;52     }
000010  bd10              POP      {r4,pc}
                  |L5.18|
000012  2000              MOVS     r0,#0                 ;50
000014  e7fc              B        |L5.16|
;;;53     
                          ENDP

000016  0000              DCW      0x0000
                  |L5.24|
                          DCD      0x08010000
                  |L5.28|
                          DCD      RANDOM_BOOTLOADER_NEW

                          AREA ||i.FLASH_If_Write||, CODE, READONLY, ALIGN=1

                  FLASH_If_Write PROC
;;;150    */
;;;151    uint32_t FLASH_If_Write(uint32_t FlashAddressDest, uint32_t FlashAddressSrc)
000000  b570              PUSH     {r4-r6,lr}
;;;152    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;153    	uint32_t i = 0;
000006  2400              MOVS     r4,#0
;;;154    	for (i = 0; i < APPLICATION_BACKUP_LENGTH; i++)
000008  bf00              NOP      
00000a  e013              B        |L6.52|
                  |L6.12|
;;;155    	{
;;;156    		/* Device voltage range supposed to be [2.7V to 3.6V], the operation will
;;;157    		be done by word */  
;;;158    		if (FLASH_ProgramWord(FlashAddressDest + 4*i, *(__IO uint32_t*) (FlashAddressSrc + 4*i)) == FLASH_COMPLETE)
00000c  f8561024          LDR      r1,[r6,r4,LSL #2]
000010  2204              MOVS     r2,#4
000012  fb025004          MLA      r0,r2,r4,r5
000016  f7fffffe          BL       FLASH_ProgramWord
00001a  2809              CMP      r0,#9
00001c  d107              BNE      |L6.46|
;;;159    		{
;;;160    			/* 检查写入的数据 */
;;;161    			if (*(__IO uint32_t*) (FlashAddressDest + 4*i) != *(__IO uint32_t*) (FlashAddressSrc + 4*i))
00001e  f8550024          LDR      r0,[r5,r4,LSL #2]
000022  f8561024          LDR      r1,[r6,r4,LSL #2]
000026  4288              CMP      r0,r1
000028  d003              BEQ      |L6.50|
;;;162    			{
;;;163    				/* 读出的和写入的不相同 */
;;;164    				return(2);
00002a  2002              MOVS     r0,#2
                  |L6.44|
;;;165    			}
;;;166    		}
;;;167    		else
;;;168    		{
;;;169    			/* 向flash中写数据时发生错误 */
;;;170    			return (1);
;;;171    		}
;;;172    	}
;;;173    	return (0);
;;;174    }
00002c  bd70              POP      {r4-r6,pc}
                  |L6.46|
00002e  2001              MOVS     r0,#1                 ;170
000030  e7fc              B        |L6.44|
                  |L6.50|
000032  1c64              ADDS     r4,r4,#1              ;154
                  |L6.52|
000034  f5b43fc0          CMP      r4,#0x18000           ;154
000038  d3e8              BCC      |L6.12|
00003a  2000              MOVS     r0,#0                 ;173
00003c  e7f6              B        |L6.44|
;;;175    
                          ENDP


                          AREA ||i.GetSector||, CODE, READONLY, ALIGN=2

                  GetSector PROC
;;;231    */
;;;232    static uint32_t GetSector(uint32_t Address)
000000  4601              MOV      r1,r0
;;;233    {
;;;234    	uint32_t sector = 0;
000002  2000              MOVS     r0,#0
;;;235    
;;;236    	if((Address < ADDR_FLASH_SECTOR_1) && (Address >= ADDR_FLASH_SECTOR_0))
000004  4a2c              LDR      r2,|L7.184|
000006  4291              CMP      r1,r2
000008  d203              BCS      |L7.18|
00000a  f1b16f00          CMP      r1,#0x8000000
00000e  d300              BCC      |L7.18|
;;;237    	{
;;;238    		sector = FLASH_Sector_0;  
000010  e050              B        |L7.180|
                  |L7.18|
;;;239    	}
;;;240    	else if((Address < ADDR_FLASH_SECTOR_2) && (Address >= ADDR_FLASH_SECTOR_1))
000012  4a2a              LDR      r2,|L7.188|
000014  4291              CMP      r1,r2
000016  d204              BCS      |L7.34|
000018  4a27              LDR      r2,|L7.184|
00001a  4291              CMP      r1,r2
00001c  d301              BCC      |L7.34|
;;;241    	{
;;;242    		sector = FLASH_Sector_1;  
00001e  2008              MOVS     r0,#8
000020  e048              B        |L7.180|
                  |L7.34|
;;;243    	}
;;;244    	else if((Address < ADDR_FLASH_SECTOR_3) && (Address >= ADDR_FLASH_SECTOR_2))
000022  4a27              LDR      r2,|L7.192|
000024  4291              CMP      r1,r2
000026  d204              BCS      |L7.50|
000028  4a24              LDR      r2,|L7.188|
00002a  4291              CMP      r1,r2
00002c  d301              BCC      |L7.50|
;;;245    	{
;;;246    		sector = FLASH_Sector_2;  
00002e  2010              MOVS     r0,#0x10
000030  e040              B        |L7.180|
                  |L7.50|
;;;247    	}
;;;248    	else if((Address < ADDR_FLASH_SECTOR_4) && (Address >= ADDR_FLASH_SECTOR_3))
000032  4a24              LDR      r2,|L7.196|
000034  4291              CMP      r1,r2
000036  d204              BCS      |L7.66|
000038  4a21              LDR      r2,|L7.192|
00003a  4291              CMP      r1,r2
00003c  d301              BCC      |L7.66|
;;;249    	{
;;;250    		sector = FLASH_Sector_3;  
00003e  2018              MOVS     r0,#0x18
000040  e038              B        |L7.180|
                  |L7.66|
;;;251    	}
;;;252    	else if((Address < ADDR_FLASH_SECTOR_5) && (Address >= ADDR_FLASH_SECTOR_4))
000042  4a21              LDR      r2,|L7.200|
000044  4291              CMP      r1,r2
000046  d204              BCS      |L7.82|
000048  4a1e              LDR      r2,|L7.196|
00004a  4291              CMP      r1,r2
00004c  d301              BCC      |L7.82|
;;;253    	{
;;;254    		sector = FLASH_Sector_4;  
00004e  2020              MOVS     r0,#0x20
000050  e030              B        |L7.180|
                  |L7.82|
;;;255    	}
;;;256    	else if((Address < ADDR_FLASH_SECTOR_6) && (Address >= ADDR_FLASH_SECTOR_5))
000052  4a1e              LDR      r2,|L7.204|
000054  4291              CMP      r1,r2
000056  d204              BCS      |L7.98|
000058  4a1b              LDR      r2,|L7.200|
00005a  4291              CMP      r1,r2
00005c  d301              BCC      |L7.98|
;;;257    	{
;;;258    		sector = FLASH_Sector_5;  
00005e  2028              MOVS     r0,#0x28
000060  e028              B        |L7.180|
                  |L7.98|
;;;259    	}
;;;260    	else if((Address < ADDR_FLASH_SECTOR_7) && (Address >= ADDR_FLASH_SECTOR_6))
000062  4a1b              LDR      r2,|L7.208|
000064  4291              CMP      r1,r2
000066  d204              BCS      |L7.114|
000068  4a18              LDR      r2,|L7.204|
00006a  4291              CMP      r1,r2
00006c  d301              BCC      |L7.114|
;;;261    	{
;;;262    		sector = FLASH_Sector_6;  
00006e  2030              MOVS     r0,#0x30
000070  e020              B        |L7.180|
                  |L7.114|
;;;263    	}
;;;264    	else if((Address < ADDR_FLASH_SECTOR_8) && (Address >= ADDR_FLASH_SECTOR_7))
000072  4a18              LDR      r2,|L7.212|
000074  4291              CMP      r1,r2
000076  d204              BCS      |L7.130|
000078  4a15              LDR      r2,|L7.208|
00007a  4291              CMP      r1,r2
00007c  d301              BCC      |L7.130|
;;;265    	{
;;;266    		sector = FLASH_Sector_7;  
00007e  2038              MOVS     r0,#0x38
000080  e018              B        |L7.180|
                  |L7.130|
;;;267    	}
;;;268    	else if((Address < ADDR_FLASH_SECTOR_9) && (Address >= ADDR_FLASH_SECTOR_8))
000082  4a15              LDR      r2,|L7.216|
000084  4291              CMP      r1,r2
000086  d204              BCS      |L7.146|
000088  4a12              LDR      r2,|L7.212|
00008a  4291              CMP      r1,r2
00008c  d301              BCC      |L7.146|
;;;269    	{
;;;270    		sector = FLASH_Sector_8;  
00008e  2040              MOVS     r0,#0x40
000090  e010              B        |L7.180|
                  |L7.146|
;;;271    	}
;;;272    	else if((Address < ADDR_FLASH_SECTOR_10) && (Address >= ADDR_FLASH_SECTOR_9))
000092  4a12              LDR      r2,|L7.220|
000094  4291              CMP      r1,r2
000096  d204              BCS      |L7.162|
000098  4a0f              LDR      r2,|L7.216|
00009a  4291              CMP      r1,r2
00009c  d301              BCC      |L7.162|
;;;273    	{
;;;274    		sector = FLASH_Sector_9;  
00009e  2048              MOVS     r0,#0x48
0000a0  e008              B        |L7.180|
                  |L7.162|
;;;275    	}
;;;276    	else if((Address < ADDR_FLASH_SECTOR_11) && (Address >= ADDR_FLASH_SECTOR_10))
0000a2  4a0f              LDR      r2,|L7.224|
0000a4  4291              CMP      r1,r2
0000a6  d204              BCS      |L7.178|
0000a8  4a0c              LDR      r2,|L7.220|
0000aa  4291              CMP      r1,r2
0000ac  d301              BCC      |L7.178|
;;;277    	{
;;;278    		sector = FLASH_Sector_10;  
0000ae  2050              MOVS     r0,#0x50
0000b0  e000              B        |L7.180|
                  |L7.178|
;;;279    	}
;;;280    	else/*(Address < FLASH_END_ADDR) && (Address >= ADDR_FLASH_SECTOR_11))*/
;;;281    	{
;;;282    		sector = FLASH_Sector_11;  
0000b2  2058              MOVS     r0,#0x58
                  |L7.180|
;;;283    	}
;;;284    	return sector;
;;;285    }
0000b4  4770              BX       lr
                          ENDP

0000b6  0000              DCW      0x0000
                  |L7.184|
                          DCD      0x08004000
                  |L7.188|
                          DCD      0x08008000
                  |L7.192|
                          DCD      0x0800c000
                  |L7.196|
                          DCD      0x08010000
                  |L7.200|
                          DCD      0x08020000
                  |L7.204|
                          DCD      0x08040000
                  |L7.208|
                          DCD      0x08060000
                  |L7.212|
                          DCD      0x08080000
                  |L7.216|
                          DCD      0x080a0000
                  |L7.220|
                          DCD      0x080c0000
                  |L7.224|
                          DCD      0x080e0000

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  RANDOM_BOOTLOADER_NEW
                          DCD      0x0e167511
                          DCD      0xd8c09e0e
                          DCD      0x774c3541
                          DCD      0x0f9abf1a

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\flash_if.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_flash_if_c_a8a21617____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_flash_if_c_a8a21617____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_flash_if_c_a8a21617____REVSH|
#line 144
|__asm___10_flash_if_c_a8a21617____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
